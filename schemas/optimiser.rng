<?xml version="1.0" encoding="UTF-8"?>
<grammar xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0" xmlns="http://relaxng.org/ns/structure/1.0" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
  <include href="spud_base.rng"/>
  <start>
    <element name="optimiser_options">
      <a:documentation>The root node of the options dictionary.</a:documentation>
      <ref name="comment"/>
      <element name="name">
        <a:documentation>Output files are named according to the optimisation
name, e.g. [optimisation_name]_0.stat. Non-standard
characters in the optimisation name should be avoided.</a:documentation>
        <ref name="anystring"/>
      </element>
      <ref name="model"/>
      <ref name="optimisation_options"/>
      <ref name="control_io"/>
      <ref name="debugging_options"/>
    </element>
  </start>
  <define name="model">
    <element name="model">
      <a:documentation>Options to specifing the *flml file containing to model
configuration template</a:documentation>
      <attribute name="option_file">
        <data type="string"/>
      </attribute>
      <attribute name="command_line">
        <data type="string"/>
      </attribute>
    </element>
    <element name="functional">
      <a:documentation>Options to specifing the *flml file containing to model
configuration template</a:documentation>
      <attribute name="name">
        <data type="string"/>
      </attribute>
    </element>
  </define>
  <define name="optimisation_options">
    <element name="optimisation_options">
      <a:documentation>Options for the optimisation algorithm.</a:documentation>
      <choice>
        <element name="optimisation_algorithm">
          <a:documentation>Minimize the functional using the BFGS algorithm.</a:documentation>
          <attribute name="name">
            <value>BFGS</value>
          </attribute>
          <ref name="comment"/>
        </element>
        <element name="optimisation_algorithm">
          <a:documentation>Minimize the functional using the NCG algorithm.</a:documentation>
          <attribute name="name">
            <value>NCG</value>
          </attribute>
          <ref name="comment"/>
        </element>
        <element name="optimisation_algorithm">
          <a:documentation>Minimize the functional using the LBFGS algorithm. </a:documentation>
          <attribute name="name">
            <value>LBFGS</value>
          </attribute>
          <ref name="comment"/>
        </element>
        <element name="optimisation_algorithm">
          <a:documentation>Minimize the functional using modified Powellâ€™s method.</a:documentation>
          <attribute name="name">
            <value>Powell</value>
          </attribute>
          <ref name="comment"/>
        </element>
      </choice>
      <element name="tolerance">
        <a:documentation>Gradient norm must be less than tolerance before succesful termination. </a:documentation>
        <ref name="real"/>
      </element>
      <optional>
        <element name="iterations">
          <a:documentation>Maximum number of iterations to perform. </a:documentation>
          <ref name="integer"/>
        </element>
      </optional>
      <ref name="comment"/>
    </element>
  </define>
  <define name="control_io">
    <element name="control_io">
      <a:documentation>Read mesh from file.</a:documentation>
      <oneOrMore>
        <element name="control">
          <attribute name="name">
            <data type="string"/>
          </attribute>
          <choice>
            <element name="type">
              <a:documentation>A default control from the model. 
This option is used when a default control was selected in the model
(any control under /adjoint/controls/ in the model setup)</a:documentation>
              <attribute name="name">
                <value>default</value>
              </attribute>
              <ref name="comment"/>
            </element>
            <element name="type">
              <attribute name="name">
                <a:documentation>The custom control parameter is the most flexible option. 
It uses custom python functions for handling the controls input/ouput.</a:documentation>
                <value>custom</value>
              </attribute>
              <element name="initial_control">
                <a:documentation>Expects a python function "initial_control" which returns a numpy.array containing the initial guess of the control.

Example:

def initial_control():
 import numpy
 return numpy.array([1])</a:documentation>
                <ref name="python_code"/>
              </element>
              <element name="update_control">
                <a:documentation>Python function which takes as input a numpy array containing the new model parameters and
updates the corresponding model configuration.

Example:

def update_control(m):
 import pickle
 f = open('control_h.pkl', 'wb')    
 pickle.dump(m, f)
 f.close()</a:documentation>
                <ref name="python_code"/>
              </element>
              <element name="control_derivative">
                <a:documentation>Expects a python function "control_derivative" which returns a numpy.array containing the derivative of the objective function with respect to the control.

Example:

 def control_derivative():
   import pickle
   func_deriv_file = open('control_derivative_h.pkl', 'rb')
  return pickle.load(func_deriv_file)</a:documentation>
                <ref name="python_code"/>
              </element>
              <ref name="comment"/>
            </element>
          </choice>
        </element>
      </oneOrMore>
    </element>
  </define>
  <define name="debugging_options">
    <optional>
      <element name="debugging">
        <a:documentation>Debugging options.</a:documentation>
        <optional>
          <element name="check_gradient">
            <a:documentation>Check the functional gradient with respect to the parameters using finite differences. 
The l2 error of the result is saved in the stat file as [functional name]_gradient_error</a:documentation>
            <empty/>
          </element>
        </optional>
        <ref name="comment"/>
      </element>
    </optional>
  </define>
</grammar>
