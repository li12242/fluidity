<?xml version="1.0" encoding="UTF-8"?>
<grammar xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0" xmlns="http://relaxng.org/ns/structure/1.0" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
  <include href="spud_base.rng"/>
  <define name="adjoint_options">
    <element name="adjoint">
      <a:documentation>Turn on the solution of the adjoint problem.
To compute the adjoint you must specify code for the functional
derivative. If the functional is also specified, then it will be
output in the .stat file.</a:documentation>
      <oneOrMore>
        <element name="functional">
          <a:documentation>A functional to be computed.</a:documentation>
          <attribute name="name">
            <data type="string"/>
          </attribute>
          <element name="functional_derivative">
            <a:documentation>The derivative of the functional at each time level.</a:documentation>
            <element name="algorithm">
              <a:documentation>Python code for the functional derivative</a:documentation>
              <attribute name="name">
                <value>functional_derivative</value>
              </attribute>
              <ref name="python_code"/>
            </element>
          </element>
          <element name="functional_dependencies">
            <a:documentation>The dependencies of the functional at each time level.</a:documentation>
            <element name="algorithm">
              <a:documentation> Python code for the functional dependencies.
 Example (for a spacetime integral of the norm of velocity):

 def dependencies(times, timestep):
   return {"Fluid::Velocity": (timestep, timestep+1)}
</a:documentation>
              <attribute name="name">
                <value>functional_dependencies</value>
              </attribute>
              <ref name="python_code"/>
            </element>
          </element>
          <optional>
            <element name="functional_value">
              <a:documentation>The value of the functional to be computed.</a:documentation>
              <element name="algorithm">
                <a:documentation>Python code for the functional</a:documentation>
                <attribute name="name">
                  <value>functional_value</value>
                </attribute>
                <ref name="python_code"/>
              </element>
            </element>
          </optional>
        </element>
      </oneOrMore>
    </element>
  </define>
  <define name="adjoint_storage">
    <element name="adjoint_storage">
      <a:documentation>Informs the model whether the field should be computed only in the
forward model, the adjoint model, or in both.
If /adjoint is not enabled, this has no effect whatsoever.</a:documentation>
      <choice>
        <element name="exists_in_forward">
          <a:documentation>Include the field only in the forward state.</a:documentation>
          <empty/>
        </element>
        <element name="exists_in_both">
          <a:documentation>Include the field in both the forward and adjoint states.</a:documentation>
          <empty/>
        </element>
        <element name="exists_in_adjoint">
          <a:documentation>Include the field only in the adjoint state.</a:documentation>
          <empty/>
        </element>
      </choice>
    </element>
  </define>
</grammar>
