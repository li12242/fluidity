<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE testproblem SYSTEM "regressiontest.dtd">

<!-- Test the Traffic Model - Two-Fluid Approach...
-->
<testproblem>
  <name>traffic</name>
  <owner userid="dpavlidis"/>
  <tags>flml</tags>
  <problem_definition length="short" nprocs="1">
    <command_line>fluidity -v3 -l -x traffic.flml</command_line>
  </problem_definition>
 
  <variables>

    <variable name="minc" language="python">
from fluidity_tools import stat_parser
s = stat_parser("traffic.stat")
minc = s["Air"]["SolidPhase"]["min"][-1]
    </variable>

    <variable name="maxc" language="python">
from fluidity_tools import stat_parser
s = stat_parser("traffic.stat")
maxc = s["Air"]["SolidPhase"]["max"][-1]
    </variable>
    
    <variable name="minvel" language="python">
from fluidity_tools import stat_parser
s = stat_parser("traffic.stat")
minvel = s["Air"]["Velocity%magnitude"]["min"][-1]
    </variable>

    <variable name="maxvel" language="python">
from fluidity_tools import stat_parser
s = stat_parser("traffic.stat")
maxvel = s["Air"]["Velocity%magnitude"]["max"][-1]
    </variable>
    
    <variable name="vtuconc" language="python">
import vtktools
from numpy import zeros, ones, array, concatenate

colx = array([[11.8],[2.0]])
coly = ones((2,1))*2.0
colz = ones((2,1))*0.5

coordinates = concatenate((colx,coly,colz),1)

vtufile = vtktools.vtu('traffic_1.vtu')
vtuconc = vtktools.vtu.ProbeData(vtufile,coordinates,'SolidPhase')
    </variable>

    <variable name="mintrs" language="python">
from fluidity_tools import stat_parser
s = stat_parser("traffic.stat")
mintrs = s["Air"]["TrafficTracer1Source"]["min"][-1]
    </variable>

    <variable name="maxtrs" language="python">
from fluidity_tools import stat_parser
s = stat_parser("traffic.stat")
maxtrs = s["Air"]["TrafficTracer1Source"]["max"][-1]
    </variable>

    <variable name="maxtr" language="python">
from fluidity_tools import stat_parser
s = stat_parser("traffic.stat")
maxtr = s["Air"]["TrafficTracer1"]["max"][-1]
    </variable>

  </variables>

  <pass_tests>
  <test name="Add volume fraction, min" language="python">
assert minc &gt; -0.2
 </test> 
  <test name="Add volume fraction, max" language="python">
assert maxc &lt; 1.2
 </test>

  <test name="Add source, min" language="python">
assert minvel &gt; -0.01
 </test> 
  <test name="Add source, max" language="python">
assert maxvel &lt; 4.5
 </test>
 
   <test name="Spatial Vol Frac, min" language="python">
assert vtuconc[1] &lt; 1.E-3
 </test>
   <test name="Spatial Vol Frac, max" language="python">
assert abs(vtuconc[0]- 0.8991) &lt; 1.E-3
 </test>

   <test name="Traffic Tracer Source, min" language="python">
assert mintrs &lt; 1.E-3
 </test>
   <test name="Traffic Tracer Source, max" language="python">
assert maxtrs &gt; 0.175
 </test>
   <test name="Traffic Tracer, max" language="python">
assert maxtr &gt; 1.E-4
 </test>

  </pass_tests>

  <warn_tests>
  </warn_tests>

</testproblem>
