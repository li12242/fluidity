<?xml version='1.0' encoding='utf8'?>
<fluidity_options>
  <simulation_name>
    <string_value lines="1">channel</string_value>
  </simulation_name>
  <problem_type>
    <string_value lines="1">oceans</string_value>
  </problem_type>
  <geometry>
    <dimension replaces="NDIM">
      <integer_value rank="0">3</integer_value>
    </dimension>
    <mesh name="CoordinateMesh">
      <from_file file_name="channel">
        <format name="triangle">
          <string_value>triangle</string_value>
        </format>
        <stat>
          <include_in_stat/>
        </stat>
      </from_file>
    </mesh>
    <mesh name="VelocityMesh">
      <from_mesh>
        <mesh name="PeriodicContinuousMesh"/>
        <mesh_continuity>
          <string_value>discontinuous</string_value>
        </mesh_continuity>
        <stat>
          <exclude_from_stat/>
        </stat>
      </from_mesh>
    </mesh>
    <mesh name="PressureMesh">
      <from_mesh>
        <mesh name="PeriodicContinuousMesh"/>
        <mesh_shape>
          <polynomial_degree>
            <integer_value rank="0">2</integer_value>
          </polynomial_degree>
        </mesh_shape>
        <stat>
          <exclude_from_stat/>
        </stat>
      </from_mesh>
    </mesh>
    <mesh name="PeriodicContinuousMesh">
      <from_mesh>
        <mesh name="CoordinateMesh"/>
        <periodic_boundary_conditions name="MakeEndsMeet">
          <physical_boundary_ids>
            <integer_value shape="1" rank="1">5</integer_value>
          </physical_boundary_ids>
          <aliased_boundary_ids>
            <integer_value shape="1" rank="1">3</integer_value>
          </aliased_boundary_ids>
          <coordinate_map>
            <string_value lines="20" type="python">def val(X,t):
   return (X[0]-100000,X[1],X[2])</string_value>
          </coordinate_map>
        </periodic_boundary_conditions>
        <stat>
          <exclude_from_stat/>
        </stat>
      </from_mesh>
    </mesh>
    <quadrature>
      <degree replaces="NGI">
        <integer_value rank="0">4</integer_value>
      </degree>
    </quadrature>
    <ocean_boundaries>
      <top_surface_ids>
        <integer_value shape="1" rank="1">1</integer_value>
      </top_surface_ids>
      <bottom_surface_ids>
        <integer_value shape="1" rank="1">2</integer_value>
      </bottom_surface_ids>
      <scalar_field name="DistanceToTop" rank="0">
        <diagnostic>
          <algorithm name="Internal" material_phase_support="multiple"/>
          <mesh name="CoordinateMesh"/>
          <output/>
          <stat/>
          <convergence>
            <include_in_convergence/>
          </convergence>
          <detectors>
            <include_in_detectors/>
          </detectors>
          <steady_state>
            <include_in_steady_state/>
          </steady_state>
        </diagnostic>
      </scalar_field>
      <scalar_field name="DistanceToBottom" rank="0">
        <diagnostic>
          <algorithm name="Internal" material_phase_support="multiple"/>
          <mesh name="CoordinateMesh"/>
          <output/>
          <stat/>
          <convergence>
            <include_in_convergence/>
          </convergence>
          <detectors>
            <include_in_detectors/>
          </detectors>
          <steady_state>
            <include_in_steady_state/>
          </steady_state>
        </diagnostic>
      </scalar_field>
    </ocean_boundaries>
  </geometry>
  <io>
    <dump_format>
      <string_value>vtk</string_value>
    </dump_format>
    <dump_period_in_timesteps>
      <integer_value rank="0">1</integer_value>
    </dump_period_in_timesteps>
    <output_mesh name="CoordinateMesh"/>
    <stat/>
  </io>
  <timestepping>
    <current_time replaces="ACCTIM">
      <real_value rank="0">0.0</real_value>
    </current_time>
    <timestep replaces="DT">
      <real_value rank="0">1</real_value>
    </timestep>
    <finish_time replaces="LTIME">
      <real_value rank="0">1e20</real_value>
    </finish_time>
    <final_timestep>
      <integer_value rank="0">500</integer_value>
      <comment>This should bring the wave exactly around</comment>
    </final_timestep>
    <nonlinear_iterations replaces="ITINOI">
      <integer_value rank="0">2</integer_value>
    </nonlinear_iterations>
  </timestepping>
  <physical_parameters>
    <gravity>
      <magnitude replaces="GRAVTY">
        <real_value rank="0">10.0</real_value>
      </magnitude>
      <vector_field replaces="BSOUX BSOUY BSOUZ" name="GravityDirection" rank="1">
        <prescribed>
          <value name="whole_mesh">
            <constant>
              <real_value shape="3" dim1="dim" rank="1">0 0 -1</real_value>
            </constant>
          </value>
          <output/>
          <stat>
            <include_in_stat/>
          </stat>
          <detectors>
            <exclude_from_detectors/>
          </detectors>
        </prescribed>
      </vector_field>
    </gravity>
    <coriolis replaces="OPTOME">
      <f_plane replaces="OPTOME = 0">
        <f replaces="OMEGA">
          <real_value rank="0">2.0e-2</real_value>
        </f>
      </f_plane>
    </coriolis>
  </physical_parameters>
  <material_phase name="water">
    <equation_of_state>
      <fluids>
        <linear replaces="EQNSTA=0 or 1">
          <reference_density replaces="DENINI">
            <real_value rank="0">1.0</real_value>
          </reference_density>
          <subtract_out_hydrostatic_level replaces="BHOUT"/>
        </linear>
      </fluids>
    </equation_of_state>
    <scalar_field name="Pressure" rank="0">
      <prognostic>
        <mesh name="PressureMesh"/>
        <spatial_discretisation>
          <continuous_galerkin>
            <remove_stabilisation_term replaces="NOFILT"/>
            <integrate_continuity_by_parts replaces="PREOPT"/>
          </continuous_galerkin>
        </spatial_discretisation>
        <scheme>
          <poisson_pressure_solution replaces="POISON">
            <string_value lines="1">never</string_value>
          </poisson_pressure_solution>
          <use_projection_method replaces="PROJEC"/>
        </scheme>
        <solver>
          <iterative_method name="cg"/>
          <preconditioner name="mg"/>
          <relative_error>
            <real_value rank="0">1e-7</real_value>
          </relative_error>
          <max_iterations>
            <integer_value rank="0">500</integer_value>
          </max_iterations>
          <never_ignore_solver_failures/>
          <diagnostics>
            <monitors/>
          </diagnostics>
        </solver>
        <initial_condition name="WholeMesh">
          <python>
            <string_value lines="20" type="python">def val(X, t):
   from math import exp, cos, pi, sqrt
   eta0=1.0
   H0=4000
   C0=sqrt(10.0*H0)
   f=2e-2
   k=2.0*pi/1e5
   eta=eta0*exp(-f*X[1]/C0)*cos(k*X[0])
   return 10*eta</string_value>
          </python>
        </initial_condition>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <exclude_from_detectors/>
        </detectors>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
        <consistent_interpolation/>
      </prognostic>
    </scalar_field>
    <scalar_field name="Density" rank="0">
      <prescribed>
        <mesh name="VelocityMesh"/>
        <value name="whole_mesh">
          <constant>
            <real_value rank="0">1.0</real_value>
          </constant>
        </value>
        <output/>
        <stat/>
        <detectors>
          <exclude_from_detectors/>
        </detectors>
      </prescribed>
    </scalar_field>
    <vector_field name="Velocity" rank="1">
      <prognostic>
        <mesh name="VelocityMesh"/>
        <equation name="Boussinesq"/>
        <spatial_discretisation>
          <discontinuous_galerkin replaces="DISOPT">
            <viscosity_scheme>
              <bassi_rebay/>
            </viscosity_scheme>
            <advection_scheme>
              <upwind/>
              <integrate_advection_by_parts>
                <twice/>
              </integrate_advection_by_parts>
            </advection_scheme>
          </discontinuous_galerkin>
          <conservative_advection replaces="BETA">
            <real_value rank="0">0.0</real_value>
          </conservative_advection>
        </spatial_discretisation>
        <temporal_discretisation>
          <theta replaces="THETA">
            <real_value rank="0">0.5</real_value>
          </theta>
          <relaxation replaces="ITHETA">
            <real_value rank="0">0.5</real_value>
          </relaxation>
        </temporal_discretisation>
        <solver>
          <iterative_method name="gmres">
            <restart>
              <integer_value rank="0">30</integer_value>
            </restart>
          </iterative_method>
          <preconditioner name="sor"/>
          <relative_error>
            <real_value rank="0">1.0e-7</real_value>
          </relative_error>
          <max_iterations>
            <integer_value rank="0">500</integer_value>
          </max_iterations>
          <never_ignore_solver_failures/>
          <diagnostics>
            <monitors/>
          </diagnostics>
        </solver>
        <constitutive_law name="fluid"/>
        <initial_condition name="whole_mesh">
          <python>
            <string_value lines="20" type="python">def val(X, t):
   from math import exp, cos, sin, pi, sqrt
   eta0=1.0
   H0=4000
   C0=sqrt(10.0*H0)
   f=2e-2
   k=2.0*pi/1e5
   u=(eta0/H0)*C0*exp(-f*X[1]/C0)*cos(k*X[0])
   w=X[2]*k*(eta0/H0)*C0*exp(-f*X[1]/C0)*sin(k*X[0])
   return (u,0,w)</string_value>
          </python>
        </initial_condition>
        <boundary_conditions replaces="boundary, TMPER1 TMPER2 TMPERI" name="NoNormalFlow">
          <surface_ids>
            <integer_value shape="1" rank="1">4</integer_value>
          </surface_ids>
          <type name="dirichlet">
            <apply_weakly/>
            <align_bc_with_cartesian>
              <y_component>
                <constant>
                  <real_value rank="0">0.0</real_value>
                </constant>
              </y_component>
            </align_bc_with_cartesian>
          </type>
        </boundary_conditions>
        <boundary_conditions replaces="boundary, TMPER1 TMPER2 TMPERI" name="FreeSurface">
          <surface_ids>
            <integer_value shape="1" rank="1">1</integer_value>
          </surface_ids>
          <type name="free_surface"/>
        </boundary_conditions>
        <boundary_conditions replaces="boundary, TMPER1 TMPER2 TMPERI" name="NoNormalFlowBottom">
          <surface_ids>
            <integer_value shape="1" rank="1">2</integer_value>
          </surface_ids>
          <type name="dirichlet">
            <apply_weakly/>
            <align_bc_with_cartesian>
              <z_component>
                <constant>
                  <real_value rank="0">0.0</real_value>
                </constant>
              </z_component>
            </align_bc_with_cartesian>
          </type>
        </boundary_conditions>
        <output/>
        <stat>
          <include_in_stat/>
          <previous_time_step>
            <exclude_from_stat/>
          </previous_time_step>
          <nonlinear_field>
            <exclude_from_stat/>
          </nonlinear_field>
        </stat>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
        <consistent_interpolation/>
      </prognostic>
    </vector_field>
  </material_phase>
  <mesh_adaptivity>
    <mesh_movement replaces="MVMESH = TRUE, ZERQG, CMCHAN = TRUE">
      <free_surface>
        <move_surface_nodes/>
      </free_surface>
    </mesh_movement>
  </mesh_adaptivity>
</fluidity_options>
