<?xml version='1.0' encoding='utf-8'?>
<fluidity_options>
  <simulation_name>
    <string_value lines="1">mmat-square-blob</string_value>
  </simulation_name>
  <problem_type>
    <string_value lines="1">multimaterial</string_value>
  </problem_type>
  <geometry>
    <dimension replaces="NDIM">
      <integer_value rank="0">2</integer_value>
    </dimension>
    <mesh name="CoordinateMesh">
      <from_file file_name="2d_square">
        <format name="triangle"/>
        <stat>
          <include_in_stat/>
        </stat>
      </from_file>
    </mesh>
    <mesh name="VelocityMesh">
      <from_mesh>
        <mesh name="DoublyPeriodicMesh"/>
        <mesh_shape>
          <polynomial_degree>
            <integer_value rank="0">0</integer_value>
          </polynomial_degree>
        </mesh_shape>
        <mesh_continuity>
          <string_value>discontinuous</string_value>
        </mesh_continuity>
        <stat>
          <exclude_from_stat/>
        </stat>
      </from_mesh>
    </mesh>
    <mesh name="PressureMesh">
      <from_mesh>
        <mesh name="DoublyPeriodicMesh"/>
        <stat>
          <exclude_from_stat/>
        </stat>
      </from_mesh>
    </mesh>
    <mesh name="DoublyPeriodicMesh">
      <from_mesh>
        <mesh name="CoordinateMesh"/>
        <periodic_boundary_conditions name="toptobottom">
          <physical_boundary_ids>
            <integer_value shape="1" rank="1">7</integer_value>
          </physical_boundary_ids>
          <aliased_boundary_ids>
            <integer_value shape="1" rank="1">9</integer_value>
          </aliased_boundary_ids>
          <coordinate_map>
            <string_value lines="20" type="python">def val(X,t):
   return(X[0],X[1]-12.0)</string_value>
          </coordinate_map>
        </periodic_boundary_conditions>
        <periodic_boundary_conditions name="righttoleft">
          <physical_boundary_ids>
            <integer_value shape="1" rank="1">10</integer_value>
          </physical_boundary_ids>
          <aliased_boundary_ids>
            <integer_value shape="1" rank="1">8</integer_value>
          </aliased_boundary_ids>
          <coordinate_map>
            <string_value lines="20" type="python">def val(X,t):
   return(X[0]-12.0,X[1])</string_value>
          </coordinate_map>
        </periodic_boundary_conditions>
        <stat>
          <exclude_from_stat/>
        </stat>
      </from_mesh>
    </mesh>
    <quadrature>
      <degree replaces="NGI">
        <integer_value rank="0">1</integer_value>
      </degree>
      <controlvolume_surface_degree>
        <integer_value rank="0">1</integer_value>
      </controlvolume_surface_degree>
    </quadrature>
  </geometry>
  <io>
    <dump_format>
      <string_value>vtk</string_value>
    </dump_format>
    <dump_period_in_timesteps>
      <integer_value rank="0">1</integer_value>
    </dump_period_in_timesteps>
    <output_mesh name="CoordinateMesh"/>
    <checkpointing>
      <checkpoint_period_in_dumps>
        <integer_value rank="0">500</integer_value>
      </checkpoint_period_in_dumps>
      <checkpoint_at_end/>
    </checkpointing>
    <stat/>
  </io>
  <timestepping>
    <current_time replaces="ACCTIM">
      <real_value rank="0">0.0</real_value>
    </current_time>
    <timestep replaces="DT">
      <real_value rank="0">0.005</real_value>
    </timestep>
    <finish_time replaces="LTIME">
      <real_value rank="0">10.0</real_value>
    </finish_time>
    <nonlinear_iterations replaces="ITINOI">
      <integer_value rank="0">2</integer_value>
    </nonlinear_iterations>
    <steady_state>
      <tolerance replaces="STEDER">
        <real_value rank="0">1.E-10</real_value>
        <infinity_norm/>
      </tolerance>
    </steady_state>
  </timestepping>
  <physical_parameters/>
  <material_phase name="Oil">
    <equation_of_state>
      <fluids>
        <linear replaces="EQNSTA=0 or 1">
          <reference_density replaces="DENINI">
            <real_value rank="0">1.5</real_value>
          </reference_density>
        </linear>
      </fluids>
    </equation_of_state>
    <scalar_field name="Pressure" rank="0">
      <prognostic>
        <mesh name="PressureMesh"/>
        <spatial_discretisation>
          <control_volumes replaces="NCOLOP = X1XXXXX -&gt; INTERF, NOFILT"/>
        </spatial_discretisation>
        <reference_node replaces="NDPSET">
          <integer_value rank="0">1</integer_value>
        </reference_node>
        <scheme>
          <poisson_pressure_solution replaces="POISON">
            <string_value lines="1">never</string_value>
          </poisson_pressure_solution>
          <use_projection_method replaces="PROJEC"/>
        </scheme>
        <solver>
          <iterative_method name="cg"/>
          <preconditioner name="sor"/>
          <relative_error>
            <real_value rank="0">1.E-9</real_value>
          </relative_error>
          <max_iterations>
            <integer_value rank="0">10000</integer_value>
          </max_iterations>
          <never_ignore_solver_failures/>
          <diagnostics>
            <monitors/>
          </diagnostics>
        </solver>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <exclude_from_detectors/>
        </detectors>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
        <consistent_interpolation/>
      </prognostic>
    </scalar_field>
    <scalar_field name="Density" rank="0">
      <diagnostic>
        <algorithm name="Internal" material_phase_support="multiple"/>
        <mesh name="PressureMesh"/>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
    <vector_field name="Velocity" rank="1">
      <prognostic>
        <mesh name="VelocityMesh"/>
        <equation name="LinearMomentum"/>
        <spatial_discretisation>
          <discontinuous_galerkin replaces="DISOPT">
            <mass_terms>
              <lump_mass_matrix/>
            </mass_terms>
            <viscosity_scheme>
              <bassi_rebay/>
            </viscosity_scheme>
            <advection_scheme>
              <upwind/>
              <integrate_advection_by_parts>
                <once/>
              </integrate_advection_by_parts>
              <integrate_conservation_term_by_parts/>
            </advection_scheme>
          </discontinuous_galerkin>
          <conservative_advection replaces="BETA">
            <real_value rank="0">0.0</real_value>
          </conservative_advection>
        </spatial_discretisation>
        <temporal_discretisation>
          <theta replaces="THETA">
            <real_value rank="0">0.5</real_value>
          </theta>
          <relaxation replaces="ITHETA">
            <real_value rank="0">0.5</real_value>
          </relaxation>
        </temporal_discretisation>
        <solver>
          <iterative_method name="gmres">
            <restart>
              <integer_value rank="0">30</integer_value>
            </restart>
          </iterative_method>
          <preconditioner name="sor"/>
          <relative_error>
            <real_value rank="0">1.E-9</real_value>
          </relative_error>
          <max_iterations>
            <integer_value rank="0">10000</integer_value>
          </max_iterations>
          <never_ignore_solver_failures/>
          <diagnostics>
            <monitors/>
          </diagnostics>
        </solver>
        <initial_condition name="WholeMesh">
          <constant>
            <real_value shape="2" dim1="dim" rank="1">0.0 0.0</real_value>
          </constant>
        </initial_condition>
        <tensor_field replaces="MUPTXX MUPTYY MUPTZZ MUPTYZ MUPTXZ MUPTXY RMUPXX RMUPYY RMUPZZ RMUPYZ RMUPXZ RMUPXY CONMU ALLMU TWOMU ONEMU" name="Viscosity" rank="2">
          <prescribed>
            <value name="WholeMesh">
              <isotropic>
                <python>
                  <string_value lines="20" type="python">def val(X,t):
  if(t&gt;=15.0):
    return 1.0
  else:
    return 0.01</string_value>
                </python>
              </isotropic>
            </value>
            <output/>
          </prescribed>
        </tensor_field>
        <tensor_field name="SurfaceTension" rank="2">
          <diagnostic field_name="MaterialVolumeFraction">
            <algorithm name="Internal" material_phase_support="multiple"/>
            <lump_mass_matrix/>
            <integrate_by_parts/>
            <output/>
          </diagnostic>
        </tensor_field>
        <output/>
        <stat>
          <include_in_stat/>
          <previous_time_step>
            <exclude_from_stat/>
          </previous_time_step>
          <nonlinear_field>
            <exclude_from_stat/>
          </nonlinear_field>
        </stat>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
        <consistent_interpolation/>
      </prognostic>
    </vector_field>
    <scalar_field name="MaterialVolumeFraction" rank="0">
      <prognostic>
        <mesh name="PressureMesh"/>
        <equation name="AdvectionDiffusion"/>
        <spatial_discretisation>
          <control_volumes>
            <face_value replaces="MOD(INT(ABS(NDISOT)/1),10) = 8,9" name="HyperC">
              <project_upwind_value_from_point replaces="NDISOT &gt; 0 on simplex meshes">
                <reflect_off_domain_boundaries/>
                <bound_projected_value_locally/>
                <store_upwind_elements replaces="ABS(NDISOT) &gt;= 1000"/>
              </project_upwind_value_from_point>
              <courant_number name="ControlVolumeCFLNumber"/>
            </face_value>
            <diffusion_scheme name="BassiRebay"/>
          </control_volumes>
          <conservative_advection replaces="TBETA, DEFALT (TBETA = 0.0)">
            <real_value rank="0">0.0</real_value>
          </conservative_advection>
        </spatial_discretisation>
        <temporal_discretisation>
          <theta replaces="TTHETA, DEFALT (TTHETA = 0.5)">
            <real_value rank="0">0.0</real_value>
          </theta>
          <control_volumes>
            <maximum_courant_number_per_subcycle>
              <real_value rank="0">0.25</real_value>
              <courant_number name="ControlVolumeCFLNumber"/>
            </maximum_courant_number_per_subcycle>
            <pivot_theta>
              <real_value rank="0">0.0</real_value>
            </pivot_theta>
          </control_volumes>
        </temporal_discretisation>
        <explicit/>
        <initial_condition name="WholeMesh">
          <python>
            <string_value lines="20" type="python">def val(X,t):
   x = X[0]
   y = X[1]
   r = x**2/4 + y**2
   if(r&lt;=1.0):
      return 1.0
   else:
      return 0.0</string_value>
          </python>
        </initial_condition>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
        <consistent_interpolation/>
        <surface_tension>
          <surface_tension_coefficient>
            <real_value rank="0">2.5</real_value>
          </surface_tension_coefficient>
        </surface_tension>
      </prognostic>
    </scalar_field>
    <scalar_field name="ControlVolumeCFLNumber" rank="0">
      <diagnostic>
        <algorithm name="Internal" material_phase_support="multiple"/>
        <mesh name="PressureMesh"/>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
    <scalar_field name="ControlVolumeDivergence" rank="0">
      <diagnostic field_name="Velocity">
        <algorithm name="Internal" material_phase_support="multiple"/>
        <mesh name="PressureMesh"/>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
  </material_phase>
  <material_phase name="Water">
    <equation_of_state>
      <fluids>
        <linear replaces="EQNSTA=0 or 1">
          <reference_density replaces="DENINI">
            <real_value rank="0">0.5</real_value>
          </reference_density>
        </linear>
      </fluids>
    </equation_of_state>
    <scalar_field name="Pressure" rank="0">
      <aliased material_phase_name="Oil" field_name="Pressure"/>
    </scalar_field>
    <scalar_field name="Density" rank="0">
      <aliased material_phase_name="Oil" field_name="Density"/>
    </scalar_field>
    <vector_field name="Velocity" rank="1">
      <aliased material_phase_name="Oil" field_name="Velocity"/>
    </vector_field>
    <scalar_field name="MaterialVolumeFraction" rank="0">
      <diagnostic>
        <algorithm name="Internal" material_phase_support="multiple"/>
        <mesh name="PressureMesh"/>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
  </material_phase>
</fluidity_options>
