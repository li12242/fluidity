<?xml version='1.0' encoding='utf-8'?>
<testproblem>
  <name>wetting_and_drying_thacker_cg_parallel</name>
  <owner userid="sf1409"/>
  <problem_definition length="special" nprocs="4">
    <command_line>mpiexec -n 4 fluidity thacker.flml</command_line>
  </problem_definition>
  <variables>
    <variable name="integralerror" language="python">import os
meastimestep=82
timestep=650
f=os.popen("./plotfs_detec.py -v "+str(meastimestep)+" -t "+str(timestep)+" --file=onedomain_2plus1.detectors | grep 'Integral error'")
output=f.readline()
integralerror=float(output.split()[-1])<comment>The specified meastimestep should be the timestep after 1 1/4 waves, that is when the waterlevel is almost constant.
The timestep value must be adjusted so that the oscillation speed of numerical and analytical solution are equal (try and error by running ./plotfs_detec.py -t 650 --file=onedomain_2plus1.detectors</comment></variable>
    <variable name="domaincentererror" language="python">import os
meastimestep=82
timestep=650
f=os.popen("./plotfs_detec.py -v "+str(meastimestep)+" -t "+str(timestep)+" --file=onedomain_2plus1.detectors | grep 'Error in the domain center'")
output=f.readline()
domaincentererror=float(output.split()[-1])<comment>The specified meastimestep should be the timestep after 1 1/4 waves, that is when the waterlevel is almost constant.
The timestep value must be adjusted so that the oscillation speed of numerical and analytical solution are equal (try and error by running ./plotfs_detec.py -t 650 --file=onedomain_2plus1.detectors</comment></variable>
    <variable name="ElapsedTime" language="python">from fluidity_tools import stat_parser
s = stat_parser("onedomain_2plus1.detectors")
ElapsedTime=s["ElapsedTime"]["value"]</variable>
    <variable name="damping" language="python">import os
starttimestep=0
endtimestep=136
# Get central fs position at beginning
f=os.popen("./plotfs_detec.py -v "+str(starttimestep)+" --file=onedomain_2plus1.detectors | grep 'Numerical position at domain center'")
output=f.readline()
startpos=float(output.split()[-1])
# Get central fs position after 2 waves
f=os.popen("./plotfs_detec.py -v "+str(endtimestep)+" --file=onedomain_2plus1.detectors | grep 'Numerical position at domain center'")
output=f.readline()
endpos=float(output.split()[-1])
damping=abs(startpos-endpos)<comment>starttimestep should be 0
endtimestep should be after 2 waves</comment></variable>
  </variables>
  <pass_tests>
    <test name="endtime" language="python">assert(ElapsedTime[-1]==90000.0)</test>
    <test name="integralerror" language="python">print 'Error after 1 1/4 waves integrated over a slice through the domain: ', integralerror
assert(integralerror&lt;=50000.0)<comment>this test checks if the wetting and drying alpa is correct at the last timestep. It should be 0 for detectors located left of X=5520 (det_01...det_4) and 1 for detectors right of that postition (det_06...det_11).</comment></test>
    <test name="domaincentererror" language="python">print 'Error after 1 1/4 waves in domain center: ', domaincentererror
assert(domaincentererror&lt;=0.1)</test>
    <test name="daming" language="python">print 'Damping after 2 waves: '+str(damping)+'m.'
assert(damping&lt;=0.5)</test>
  </pass_tests>
</testproblem>
