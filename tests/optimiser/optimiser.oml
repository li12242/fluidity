<?xml version='1.0' encoding='utf-8'?>
<optimiser_options>
  <name>
    <string_value lines="1">optimiser</string_value>
  </name>
  <model command_line="../../bin/shallow_water" option_file="dummy.swml"/>
  <functional name="functional1"/>
  <optimisation_options>
    <optimisation_algorithm name="NCG"/>
    <tolerance>
      <real_value rank="0">1e-10</real_value>
    </tolerance>
  </optimisation_options>
  <control_io>
    <control name="h">
      <type name="custom">
        <get_initial_controls>
          <string_value lines="20" type="python">def get_initial_controls():
  import numpy
  return numpy.array([1])</string_value>
        </get_initial_controls>
        <update_controls>
          <string_value lines="20" type="python">def update_controls(m):
  import pickle
  import os.path  
  fname = 'control_h.pkl'
  f = open(fname, 'wb')    
  pickle.dump(m, f)
  f.close()</string_value>
        </update_controls>
      </type>
    </control>
    <control name="g">
      <type name="custom">
        <get_initial_controls>
          <string_value type="python" lines="20">def get_initial_controls():
  import numpy
  return numpy.array([-1])</string_value>
        </get_initial_controls>
        <update_controls>
          <string_value type="python" lines="20">def update_controls(m):
  import pickle
  import os.path  
  fname = 'control_g.pkl'
  f = open(fname, 'wb')    
  pickle.dump(m, f)
  f.close()</string_value>
        </update_controls>
      </type>
    </control>
  </control_io>
  <debugging>
    <check_gradient/>
  </debugging>
</optimiser_options>
