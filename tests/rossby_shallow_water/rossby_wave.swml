<?xml version='1.0' encoding='utf-8'?>
<shallow_water_options>
  <simulation_name>
    <string_value lines="1">rossby_wave</string_value>
  </simulation_name>
  <geometry>
    <dimension>
      <integer_value rank="0">2</integer_value>
    </dimension>
    <mesh name="CoordinateMesh">
      <from_file file_name="square">
        <format name="triangle"/>
        <stat>
          <include_in_stat/>
        </stat>
      </from_file>
    </mesh>
    <mesh name="VelocityMesh">
      <from_mesh>
        <mesh name="PeriodicMesh"/>
        <mesh_continuity>
          <string_value>discontinuous</string_value>
        </mesh_continuity>
        <stat>
          <exclude_from_stat/>
        </stat>
      </from_mesh>
    </mesh>
    <mesh name="PressureMesh">
      <from_mesh>
        <mesh name="PeriodicMesh"/>
        <mesh_shape>
          <polynomial_degree>
            <integer_value rank="0">2</integer_value>
          </polynomial_degree>
        </mesh_shape>
        <stat>
          <exclude_from_stat/>
        </stat>
      </from_mesh>
    </mesh>
    <mesh name="PeriodicMesh">
      <from_mesh>
        <mesh name="CoordinateMesh"/>
        <periodic_boundary_conditions name="XDirection">
          <physical_boundary_ids>
            <integer_value shape="1" rank="1">1</integer_value>
          </physical_boundary_ids>
          <aliased_boundary_ids>
            <integer_value shape="1" rank="1">2</integer_value>
          </aliased_boundary_ids>
          <coordinate_map>
            <string_value lines="20" type="python">def val(X,t):
        from numpy import pi
        result=list(X)
        result[0]=result[0]-2.*pi
       
        return result</string_value>
          </coordinate_map>
        </periodic_boundary_conditions>
        <stat>
          <exclude_from_stat/>
        </stat>
      </from_mesh>
    </mesh>
    <mesh name="OutputMesh">
      <from_mesh>
        <mesh name="CoordinateMesh"/>
        <mesh_shape>
          <polynomial_degree>
            <integer_value rank="0">2</integer_value>
          </polynomial_degree>
        </mesh_shape>
        <mesh_continuity>
          <string_value>discontinuous</string_value>
        </mesh_continuity>
        <stat>
          <exclude_from_stat/>
        </stat>
      </from_mesh>
    </mesh>
    <quadrature>
      <degree>
        <integer_value rank="0">6</integer_value>
      </degree>
    </quadrature>
  </geometry>
  <io>
    <dump_format>
      <string_value>vtk</string_value>
    </dump_format>
    <dump_period>
      <constant>
        <real_value rank="0">1.0</real_value>
      </constant>
    </dump_period>
    <output_mesh name="OutputMesh"/>
  </io>
  <timestepping>
    <current_time>
      <real_value rank="0">0</real_value>
    </current_time>
    <timestep>
      <real_value rank="0">0.00015625</real_value>
    </timestep>
    <nonlinear_iterations>
      <integer_value rank="0">1</integer_value>
    </nonlinear_iterations>
    <finish_time>
      <real_value rank="0">1.0</real_value>
    </finish_time>
  </timestepping>
  <physical_parameters>
    <gravity>
      <magnitude>
        <real_value rank="0">100.0</real_value>
      </magnitude>
    </gravity>
    <coriolis>
      <beta_plane>
        <f_0>
          <real_value rank="0">100.0</real_value>
        </f_0>
        <beta>
          <real_value shape="2" dim1="dim" rank="1">0.0 1.0</real_value>
        </beta>
      </beta_plane>
    </coriolis>
  </physical_parameters>
  <material_phase name="Fluid">
    <vector_field name="Velocity" rank="1">
      <prognostic>
        <mesh name="VelocityMesh"/>
        <equation name="ShallowWater"/>
        <spatial_discretisation>
          <discontinuous_galerkin>
            <advection_scheme>
              <none/>
            </advection_scheme>
          </discontinuous_galerkin>
          <conservative_advection>
            <real_value rank="0">0.</real_value>
          </conservative_advection>
        </spatial_discretisation>
        <solver>
          <iterative_method name="gmres">
            <restart>
              <integer_value rank="0">30</integer_value>
            </restart>
          </iterative_method>
          <preconditioner name="sor"/>
          <relative_error>
            <real_value rank="0">1.0e-10</real_value>
          </relative_error>
          <max_iterations>
            <integer_value rank="0">1000</integer_value>
          </max_iterations>
          <never_ignore_solver_failures/>
          <diagnostics>
            <monitors/>
          </diagnostics>
        </solver>
        <initial_condition name="WholeMesh">
          <balanced/>
        </initial_condition>
        <output/>
        <stat>
          <include_in_stat/>
          <previous_time_step>
            <exclude_from_stat/>
          </previous_time_step>
          <nonlinear_field>
            <exclude_from_stat/>
          </nonlinear_field>
        </stat>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
        <consistent_interpolation/>
      </prognostic>
    </vector_field>
    <scalar_field name="LayerThickness" rank="0">
      <prognostic>
        <mesh name="PressureMesh"/>
        <spatial_discretisation>
          <continuous_galerkin>
            <advection_terms>
              <exclude_advection_terms/>
            </advection_terms>
          </continuous_galerkin>
          <conservative_advection>
            <real_value rank="0">0.</real_value>
          </conservative_advection>
        </spatial_discretisation>
        <temporal_discretisation>
          <theta>
            <real_value rank="0">0.5</real_value>
          </theta>
          <relaxation>
            <real_value rank="0">0.5</real_value>
          </relaxation>
        </temporal_discretisation>
        <solver>
          <iterative_method name="gmres">
            <restart>
              <integer_value rank="0">30</integer_value>
            </restart>
          </iterative_method>
          <preconditioner name="sor"/>
          <relative_error>
            <real_value rank="0">1.0e-10</real_value>
          </relative_error>
          <max_iterations>
            <integer_value rank="0">1000</integer_value>
          </max_iterations>
          <never_ignore_solver_failures/>
          <diagnostics>
            <monitors/>
          </diagnostics>
        </solver>
        <initial_condition name="WholeMesh">
          <python>
            <string_value lines="20" type="python">import rossby_wave
val=rossby_wave.height_solution(rossby_wave.k)</string_value>
          </python>
        </initial_condition>
        <mean_layer_thickness>
          <real_value rank="0">100.0</real_value>
        </mean_layer_thickness>
        <output/>
        <stat/>
        <consistent_interpolation/>
      </prognostic>
    </scalar_field>
    <scalar_field name="AnalyticLayerThicknessSolution" rank="0">
      <prescribed>
        <mesh name="PressureMesh"/>
        <value name="WholeMesh">
          <python>
            <string_value lines="20" type="python">import rossby_wave
val=rossby_wave.height_solution(rossby_wave.k)</string_value>
          </python>
        </value>
        <output/>
        <stat/>
        <detectors>
          <exclude_from_detectors/>
        </detectors>
      </prescribed>
    </scalar_field>
    <scalar_field name="LayerThicknessError" rank="0">
      <diagnostic>
        <algorithm name="scalar_python_diagnostic" material_phase_support="single">
          <string_value lines="20" type="python">s=state.scalar_fields["LayerThickness"]
a=state.scalar_fields["AnalyticLayerThicknessSolution"]

for n in range(field.node_count):
	s_n=s.node_val(n)
	a_n=a.node_val(n)
	field.set(n,s_n-a_n)</string_value>
        </algorithm>
        <mesh name="PressureMesh"/>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
  </material_phase>
</shallow_water_options>
