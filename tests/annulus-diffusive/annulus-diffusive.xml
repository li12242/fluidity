<?xml version = "1.0" encoding = "UTF-8" ?>
<!DOCTYPE testproblem SYSTEM "regressiontest.dtd">
<testproblem>
  <name>Pure diffusion annulus test</name>
  <owner userid="maddison"/>
  <tags>flml</tags>
  <problem_definition length = "medium" nprocs = "1">
    <command_line>dfluidity -v2 -l annulus.flml</command_line>
  </problem_definition>
  <variables>
    <variable name = "timesteps" language = "python">
import fluidity_tools
s = fluidity_tools.stat_parser("annulus.stat")
timesteps = len(s["ElapsedTime"]["value"])
    </variable>
    <variable name = "solvers_converged" language = "python">
import os
files = os.listdir("./")
solvers_converged = not "matrixdump" in files and not "matrixdump.info" in files 
    </variable>
    <variable name = "inner_wall_nus" language = "python">
import math
import fluidity_tools
s = fluidity_tools.stat_parser("annulus.stat")
inner_wall_nus = [h  * math.log(8.0 / 2.5) / (2.0 * math.pi * 14.0 * math.log(math.e)) for h in s["Water"]["Temperature"]["surface_integral%InnerH"]]
    </variable>
  </variables>
  <pass_tests>
    <test name = "Solvers converged" language = "python">
assert(solvers_converged)
    </test>
    <test name = "Final nu" language = "python">
import fluidity_tools
nu = inner_wall_nus[-1]
print nu
assert(nu &lt; 0.0)
fluidity_tools.compare_variable(abs(nu), 1.0, 1.0e-2)
    </test>
  </pass_tests>
  <warn_tests>
  </warn_tests>
</testproblem>
