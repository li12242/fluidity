<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE testproblem SYSTEM "regressiontest.dtd">

<testproblem>
  <name>Standing free surface wave in channel using free surface method of the old codepath.</name>
  <owner userid="skramer"/>
  <tags>flml</tags>
  <problem_definition length="medium" nprocs="1">
    <command_line>dfluidity -v3 -l -x standing_wave.flml</command_line>
  </problem_definition>
  <variables>
    <variable name="halfway_free_surface" language="python">
import vtktools
import numpy
# read in the .vtu after a half period
u=vtktools.vtu("standing_wave_1.vtu")
# specify the coordinates to check
coordinates=numpy.array([[0,5e4,0],[1.e6,5e4,0],[0,5e4,1000],[1.e6,5e4,1000]])
halfway_free_surface=u.ProbeData(coordinates, "FreeSurface")
    </variable>
    <variable name="final_free_surface" language="python">
import vtktools
import numpy
# read in the final .vtu
u=vtktools.vtu("standing_wave_2.vtu")
# specify the coordinates to check
coordinates=numpy.array([[0,5e4,0],[1.e6,5e4,0],[0,5e4,1000],[1.e6,5e4,1000]])
final_free_surface=u.ProbeData(coordinates, "FreeSurface")
    </variable>
  </variables>
  <pass_tests>
    <test name="Correct amplitude left halfway" language="python">
# free surface after one period should be close to 1.0 again
assert (halfway_free_surface[0] &lt; -0.9)
    </test>
    <test name="Correct amplitude right halfway" language="python">
# free surface after one period should be close to -1.0 again
assert (halfway_free_surface[1] &gt; 0.9)
  </test>
    <test name="Correct bottom free surface left halfway" language="python">
# check that vertical integration works: free surface at the top should be the same as on the bottom
import fluidity_tools
fluidity_tools.compare_variable(halfway_free_surface[0], halfway_free_surface[2], 1e-4)
    </test>
    <test name="Correct bottom free surface right halfway" language="python">
# check that vertical integration works: free surface at the top should be the same as on the bottom
import fluidity_tools
fluidity_tools.compare_variable(halfway_free_surface[1], halfway_free_surface[3], 1e-4)
    </test>
    <test name="Correct amplitude left" language="python">
# free surface after one period should be close to 1.0 again
assert (final_free_surface[0] &gt; 0.88)
    </test>
    <test name="Correct amplitude right" language="python">
# free surface after one period should be close to -1.0 again
assert (final_free_surface[1] &lt; -0.88)
  </test>
    <test name="Correct bottom free surface left" language="python">
# check that vertical integration works: free surface at the top should be the same as on the bottom
import fluidity_tools
fluidity_tools.compare_variable(final_free_surface[0], final_free_surface[2], 1e-4)
    </test>
    <test name="Correct bottom free surface right" language="python">
# check that vertical integration works: free surface at the top should be the same as on the bottom
import fluidity_tools
fluidity_tools.compare_variable(final_free_surface[1], final_free_surface[3], 1e-4)
    </test>
  </pass_tests>
  <warn_tests>
  </warn_tests>
</testproblem>
