<?xml version='1.0' encoding='utf-8'?>
<fluidity_options>
  <simulation_name>
    <string_value lines="1">annulus</string_value>
  </simulation_name>
  <problem_type>
    <string_value lines="1">oceans</string_value>
    <comment>Original gemfile value: "fluids ocean"</comment>
  </problem_type>
  <geometry>
    <dimension replaces="NDIM">
      <integer_value rank="0">3</integer_value>
    </dimension>
    <mesh name="CoordinateMesh">
      <from_file file_name="annulus-structured-tanh-12x32">
        <format name="triangle"/>
        <stat>
          <include_in_stat/>
        </stat>
      </from_file>
    </mesh>
    <mesh name="VelocityMesh">
      <from_mesh>
        <mesh name="CoordinateMesh"/>
        <mesh_continuity>
          <string_value>discontinuous</string_value>
        </mesh_continuity>
        <stat>
          <exclude_from_stat/>
        </stat>
      </from_mesh>
    </mesh>
    <mesh name="PressureMesh">
      <from_mesh>
        <mesh name="CoordinateMesh"/>
        <mesh_shape>
          <polynomial_degree>
            <integer_value rank="0">2</integer_value>
          </polynomial_degree>
        </mesh_shape>
        <stat>
          <exclude_from_stat/>
        </stat>
      </from_mesh>
    </mesh>
    <quadrature>
      <degree replaces="NGI">
        <integer_value rank="0">4</integer_value>
        <comment>Original gemfile value: NGI 11</comment>
      </degree>
    </quadrature>
  </geometry>
  <io>
    <dump_format>
      <string_value>vtk</string_value>
    </dump_format>
    <dump_period_in_timesteps>
      <integer_value rank="0">20</integer_value>
    </dump_period_in_timesteps>
    <output_mesh name="CoordinateMesh"/>
    <stat/>
    <detectors>
      <detector_array name="MidPoint">
        <number_of_detectors>
          <integer_value rank="0">64</integer_value>
        </number_of_detectors>
        <static/>
        <python>
          <string_value lines="20" type="python">def val(t):
	import math
	
	r = 5.25
	z = 7.0
	coords = []
	for i in range(64):
		theta = 2.0 * math.pi * i / 64.0
		coords.append([r * math.cos(theta), r * math.sin(theta), z])
	
	return coords</string_value>
        </python>
      </detector_array>
      <detector_array name="Phi0">
        <number_of_detectors>
          <integer_value rank="0">32</integer_value>
        </number_of_detectors>
        <static/>
        <python>
          <string_value lines="20" type="python">def val(t):
	coords = []
	for i in range(32):
		coords.append([5.25, 0.0, float(i) * 14.0 / 32.0])

	return coords</string_value>
        </python>
      </detector_array>
    </detectors>
  </io>
  <timestepping>
    <current_time replaces="ACCTIM">
      <real_value rank="0">0.0</real_value>
    </current_time>
    <timestep replaces="DT">
      <real_value rank="0">0.25</real_value>
    </timestep>
    <finish_time replaces="LTIME">
      <real_value rank="0">1.0e6</real_value>
    </finish_time>
    <final_timestep>
      <integer_value rank="0">5</integer_value>
    </final_timestep>
    <nonlinear_iterations replaces="ITINOI">
      <integer_value rank="0">2</integer_value>
    </nonlinear_iterations>
    <adaptive_timestep replaces="TIMAUT">
      <requested_cfl>
        <real_value rank="0">2.5</real_value>
      </requested_cfl>
      <courant_number name="CFLNumber">
        <mesh name="VelocityMesh"/>
      </courant_number>
      <increase_tolerance>
        <real_value rank="0">1.05</real_value>
      </increase_tolerance>
    </adaptive_timestep>
  </timestepping>
  <physical_parameters>
    <gravity>
      <magnitude replaces="GRAVTY">
        <real_value rank="0">1.29</real_value>
        <comment>Scaled according to normalised thermal expansion coefficient and delta T, so that:

	g' (deltaT)' alpha' = g (deltaT) alpha	(where ' denotes model value)

=&gt;	g' = [g (delta T) alpha] / [(deltaT)' alpha']
	    = g (delta T) alpha				since (deltaT)', alpha' are normalised
	    = 981 * 4 * 3.3E-4 cm / sÂ²</comment>
      </magnitude>
      <vector_field replaces="BSOUX BSOUY BSOUZ" name="GravityDirection" rank="1">
        <prescribed>
          <value name="WholeMesh">
            <constant>
              <real_value shape="3" dim1="dim" rank="1">0.0 0.0 -1.0</real_value>
            </constant>
          </value>
          <output/>
          <stat>
            <exclude_from_stat/>
          </stat>
          <detectors>
            <exclude_from_detectors/>
          </detectors>
        </prescribed>
      </vector_field>
    </gravity>
    <coriolis replaces="OPTOME">
      <f_plane replaces="OPTOME = 0">
        <f replaces="OMEGA">
          <real_value rank="0">2.0</real_value>
        </f>
      </f_plane>
    </coriolis>
  </physical_parameters>
  <material_phase name="Water">
    <equation_of_state>
      <fluids>
        <linear replaces="EQNSTA=0 or 1">
          <reference_density replaces="DENINI">
            <real_value rank="0">1.0</real_value>
            <comment>Normalised</comment>
          </reference_density>
          <temperature_dependency replaces="BOUSIN, EQNSTA=0">
            <reference_temperature replaces="TEMINI">
              <real_value rank="0">0.0</real_value>
              <comment>Normalised delta T</comment>
            </reference_temperature>
            <thermal_expansion_coefficient replaces="DENGAM">
              <real_value rank="0">1.0</real_value>
              <comment>Normalised</comment>
            </thermal_expansion_coefficient>
          </temperature_dependency>
          <subtract_out_hydrostatic_level replaces="BHOUT"/>
        </linear>
      </fluids>
    </equation_of_state>
    <scalar_field name="Pressure" rank="0">
      <prognostic>
        <mesh name="PressureMesh"/>
        <spatial_discretisation>
          <continuous_galerkin/>
        </spatial_discretisation>
        <reference_node replaces="NDPSET">
          <integer_value rank="0">1</integer_value>
        </reference_node>
        <scheme>
          <poisson_pressure_solution replaces="POISON">
            <string_value lines="1">never</string_value>
            <comment>Not in original gemfile</comment>
          </poisson_pressure_solution>
          <use_projection_method replaces="PROJEC"/>
        </scheme>
        <solver>
          <iterative_method name="cg"/>
          <preconditioner name="mg"/>
          <relative_error>
            <real_value rank="0">1.0E-7</real_value>
          </relative_error>
          <max_iterations>
            <integer_value rank="0">1700</integer_value>
          </max_iterations>
          <never_ignore_solver_failures/>
          <diagnostics>
            <monitors/>
          </diagnostics>
        </solver>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
        <consistent_interpolation/>
      </prognostic>
    </scalar_field>
    <vector_field name="Velocity" rank="1">
      <prognostic>
        <mesh name="VelocityMesh"/>
        <equation name="Boussinesq"/>
        <spatial_discretisation>
          <discontinuous_galerkin replaces="DISOPT">
            <mass_terms>
              <lump_mass_matrix/>
            </mass_terms>
            <viscosity_scheme>
              <bassi_rebay/>
            </viscosity_scheme>
            <advection_scheme>
              <upwind/>
              <integrate_advection_by_parts>
                <twice/>
              </integrate_advection_by_parts>
            </advection_scheme>
          </discontinuous_galerkin>
          <conservative_advection replaces="BETA">
            <real_value rank="0">0.0</real_value>
          </conservative_advection>
        </spatial_discretisation>
        <temporal_discretisation>
          <theta replaces="THETA">
            <real_value rank="0">0.5</real_value>
          </theta>
          <relaxation replaces="ITHETA">
            <real_value rank="0">0.5</real_value>
          </relaxation>
        </temporal_discretisation>
        <solver>
          <iterative_method name="gmres">
            <restart>
              <integer_value rank="0">30</integer_value>
              <comment>Not in original gemfile - Taking suggested value (30)</comment>
            </restart>
          </iterative_method>
          <preconditioner name="eisenstat"/>
          <relative_error>
            <real_value rank="0">1.0E-7</real_value>
          </relative_error>
          <max_iterations>
            <integer_value rank="0">1000</integer_value>
          </max_iterations>
          <never_ignore_solver_failures/>
          <diagnostics>
            <monitors/>
          </diagnostics>
        </solver>
        <initial_condition name="WholeMesh">
          <constant>
            <real_value shape="3" dim1="dim" rank="1">0.0 0.0 0.0</real_value>
          </constant>
        </initial_condition>
        <boundary_conditions replaces="boundary, TMPER1 TMPER2 TMPERI" name="NoSlipTopBottomAndWalls">
          <surface_ids>
            <integer_value shape="4" rank="1">1 2 3 4</integer_value>
          </surface_ids>
          <type name="dirichlet">
            <align_bc_with_cartesian>
              <x_component>
                <constant>
                  <real_value rank="0">0.0</real_value>
                </constant>
              </x_component>
              <y_component>
                <constant>
                  <real_value rank="0">0.0</real_value>
                </constant>
              </y_component>
              <z_component>
                <constant>
                  <real_value rank="0">0.0</real_value>
                </constant>
              </z_component>
            </align_bc_with_cartesian>
          </type>
        </boundary_conditions>
        <tensor_field replaces="MUPTXX MUPTYY MUPTZZ MUPTYZ MUPTXZ MUPTXY RMUPXX RMUPYY RMUPZZ RMUPYZ RMUPXZ RMUPXY CONMU ALLMU TWOMU ONEMU" name="Viscosity" rank="2">
          <prescribed>
            <value name="WholeMesh">
              <isotropic>
                <constant>
                  <real_value rank="0">2.1E-2</real_value>
                </constant>
              </isotropic>
            </value>
            <output/>
          </prescribed>
        </tensor_field>
        <output/>
        <stat>
          <include_in_stat/>
          <previous_time_step>
            <exclude_from_stat/>
          </previous_time_step>
          <nonlinear_field>
            <exclude_from_stat/>
          </nonlinear_field>
        </stat>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
        <consistent_interpolation/>
      </prognostic>
    </vector_field>
    <scalar_field replaces="IDENT = -1" name="Temperature" rank="0">
      <prognostic>
        <mesh name="VelocityMesh"/>
        <equation name="AdvectionDiffusion"/>
        <spatial_discretisation>
          <discontinuous_galerkin replace="70 &lt;= DISOTT &lt;= 90">
            <advection_scheme>
              <upwind/>
              <integrate_advection_by_parts>
                <twice/>
              </integrate_advection_by_parts>
            </advection_scheme>
            <diffusion_scheme>
              <bassi_rebay/>
            </diffusion_scheme>
          </discontinuous_galerkin>
          <conservative_advection replaces="TBETA, DEFALT (TBETA = 0.0)">
            <real_value rank="0">0.0</real_value>
          </conservative_advection>
        </spatial_discretisation>
        <temporal_discretisation>
          <theta replaces="TTHETA, DEFALT (TTHETA = 0.5)">
            <real_value rank="0">0.5</real_value>
          </theta>
        </temporal_discretisation>
        <solver>
          <iterative_method name="gmres">
            <restart>
              <integer_value rank="0">30</integer_value>
              <comment>Not in original gemfile - Taking suggested value (30)</comment>
            </restart>
          </iterative_method>
          <preconditioner name="eisenstat"/>
          <relative_error>
            <real_value rank="0">1.0E-7</real_value>
          </relative_error>
          <max_iterations>
            <integer_value rank="0">1000</integer_value>
          </max_iterations>
          <never_ignore_solver_failures/>
          <diagnostics>
            <monitors/>
          </diagnostics>
        </solver>
        <initial_condition name="WholeMesh">
          <constant>
            <real_value rank="0">0.5</real_value>
          </constant>
        </initial_condition>
        <boundary_conditions replaces="boundary, TTPER1 TTPER2 TTPERI" name="MaintainInnerWallT">
          <surface_ids>
            <integer_value shape="1" rank="1">1</integer_value>
          </surface_ids>
          <type name="dirichlet">
            <constant>
              <real_value rank="0">0.0</real_value>
            </constant>
          </type>
        </boundary_conditions>
        <boundary_conditions replaces="boundary, TTPER1 TTPER2 TTPERI" name="MaintainOuterWallT">
          <surface_ids>
            <integer_value shape="1" rank="1">2</integer_value>
          </surface_ids>
          <type name="dirichlet">
            <constant>
              <real_value rank="0">1.0</real_value>
            </constant>
          </type>
        </boundary_conditions>
        <tensor_field replaces="TMUXX TMUYY TMUZZ TMUYZ TMUXZ TMUXY TALLMU TCONMU" name="Diffusivity" rank="2">
          <prescribed>
            <value name="WholeMesh">
              <isotropic>
                <constant>
                  <real_value rank="0">1.3E-3</real_value>
                </constant>
              </isotropic>
            </value>
            <output/>
          </prescribed>
        </tensor_field>
        <output/>
        <stat>
          <surface_integral type="gradient_normal" name="InnerH">
            <surface_ids>
              <integer_value shape="1" rank="1">1</integer_value>
            </surface_ids>
          </surface_integral>
          <surface_integral type="gradient_normal" name="OuterH">
            <surface_ids>
              <integer_value shape="1" rank="1">2</integer_value>
            </surface_ids>
          </surface_integral>
          <surface_integral type="gradient_normal" name="TopH">
            <surface_ids>
              <integer_value shape="1" rank="1">3</integer_value>
            </surface_ids>
          </surface_integral>
          <surface_integral type="gradient_normal" name="BottomH">
            <surface_ids>
              <integer_value shape="1" rank="1">4</integer_value>
            </surface_ids>
          </surface_integral>
        </stat>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
        <consistent_interpolation/>
      </prognostic>
    </scalar_field>
    <scalar_field replaces="IDENT = -601" name="CFLNumber" rank="0">
      <diagnostic>
        <algorithm name="Internal" material_phase_support="multiple"/>
        <mesh name="VelocityMesh"/>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
  </material_phase>
</fluidity_options>
