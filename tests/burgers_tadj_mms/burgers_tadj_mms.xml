<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE testproblem SYSTEM "regressiontest.dtd">
<testproblem>
  <name>Burgers Equation MMS</name>
  <owner userid="pef"/>
  <tags>burgers</tags>
  <problem_definition length="short" nprocs="1">
    <command_line>burgers_equation mms_A.bml; burgers_equation mms_B.bml; burgers_equation mms_C.bml; burgers_equation mms_D.bml</command_line>
  </problem_definition>
  <variables>
    <variable name="a_error" language="python">
from fluidity_tools import stat_parser as stat
from math import log

a_error = stat("mms_adjoint_A_adjoint.stat")["Fluid"]["AdjointError"]["l2norm"]
    </variable>
    <variable name="b_error" language="python">
from fluidity_tools import stat_parser as stat
from math import log

b_error = stat("mms_adjoint_B_adjoint.stat")["Fluid"]["AdjointError"]["l2norm"]
    </variable>
    <variable name="c_error" language="python">
from fluidity_tools import stat_parser as stat
from math import log

c_error = stat("mms_adjoint_C_adjoint.stat")["Fluid"]["AdjointError"]["l2norm"]
    </variable>
    <variable name="d_error" language="python">
from fluidity_tools import stat_parser as stat
from math import log

d_error = stat("mms_adjoint_D_adjoint.stat")["Fluid"]["AdjointError"]["l2norm"]
    </variable>
  </variables>
  <pass_tests>
    <test name="a_error" language="python">
      assert(abs(max(a_error)) &lt; 1.0e-10)
    </test>
    <test name="b_error" language="python">
      assert(abs(max(b_error)) &lt; 1.0e-10)
    </test>
    <test name="c_error" language="python">
      assert(abs(max(c_error)) &lt; 1.0e-10)
    </test>
    <test name="d_error" language="python">
      assert(abs(max(d_error)) &lt; 1.0e-10)
    </test>
  </pass_tests>
  <warn_tests>
  </warn_tests>
</testproblem>

