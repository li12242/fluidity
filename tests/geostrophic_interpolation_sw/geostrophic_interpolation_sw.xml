<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE testproblem SYSTEM "regressiontest.dtd">

<testproblem>
  <name>Balanced shallow water, with adaptivity</name>
  <owner userid="maddison"/>
  <tags>flml</tags>
  <problem_definition length="medium" nprocs="1">
    <command_line>shallow_water -v 2 balanced.swml &gt; sw.log</command_line>
  </problem_definition>
  <variables>
    <variable name="DeltaDs" language="python">
import numpy
import vtktools
DeltaDs = numpy.empty(20)
start_v = vtktools.vtu("balanced_0.vtu")
end_v = vtktools.vtu("balanced_5.vtu")
DeltaDs[0] = max(abs(start_v.GetScalarField("LayerThickness")-end_v.GetScalarField("LayerThickness")))
for i in range(1, 20):
  start_v = vtktools.vtu("balanced_" + str(5 * i + 1) + ".vtu")
  end_v = vtktools.vtu("balanced_" + str(5 * (i + 1)) + ".vtu")
  DeltaDs[i] = max(abs(start_v.GetScalarField("LayerThickness")-end_v.GetScalarField("LayerThickness")))
  print DeltaDs[i]
    </variable>
    <variable name="DeltaD" language="python">
import vtktools
start_v = vtktools.vtu("balanced_0.vtu")
end_v = vtktools.vtu("balanced_101.vtu")
DeltaD = max(start_v.GetScalarField("LayerThickness")-end_v.GetScalarField("LayerThickness"))
    </variable>
  </variables>
  <pass_tests>
    <test name="DeltaDs" language="python">
print max(DeltaDs), abs(DeltaD)
assert max(DeltaDs) &lt; 2.5e-14
assert abs(DeltaD) &lt; 6.0e-4
    </test>
  </pass_tests>
  <warn_tests>
  </warn_tests>
</testproblem>
