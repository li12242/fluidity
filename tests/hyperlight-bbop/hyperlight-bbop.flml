<?xml version='1.0' encoding='utf-8'?>
<fluidity_options>
  <simulation_name>
    <string_value lines="1">hyperlight-bbop</string_value>
  </simulation_name>
  <problem_type>
    <string_value lines="1">oceans</string_value>
  </problem_type>
  <geometry>
    <dimension>
      <integer_value rank="0">3</integer_value>
    </dimension>
    <mesh name="CoordinateMesh">
      <from_file file_name="hyperlight-bbop">
        <format name="triangle"/>
        <stat>
          <include_in_stat/>
        </stat>
      </from_file>
    </mesh>
    <mesh name="VelocityMesh">
      <from_mesh>
        <mesh name="CoordinateMesh"/>
        <stat>
          <exclude_from_stat/>
        </stat>
      </from_mesh>
    </mesh>
    <quadrature>
      <degree>
        <integer_value rank="0">3</integer_value>
      </degree>
    </quadrature>
    <ocean_boundaries>
      <top_surface_ids>
        <integer_value shape="1" rank="1">111</integer_value>
      </top_surface_ids>
      <bottom_surface_ids>
        <integer_value shape="1" rank="1">333</integer_value>
      </bottom_surface_ids>
      <scalar_field name="DistanceToTop" rank="0">
        <diagnostic>
          <algorithm name="Internal" material_phase_support="multiple"/>
          <mesh name="CoordinateMesh"/>
          <output/>
          <stat/>
          <convergence>
            <include_in_convergence/>
          </convergence>
          <detectors>
            <include_in_detectors/>
          </detectors>
          <steady_state>
            <include_in_steady_state/>
          </steady_state>
        </diagnostic>
      </scalar_field>
      <scalar_field name="DistanceToBottom" rank="0">
        <diagnostic>
          <algorithm name="Internal" material_phase_support="multiple"/>
          <mesh name="CoordinateMesh"/>
          <output/>
          <stat/>
          <convergence>
            <include_in_convergence/>
          </convergence>
          <detectors>
            <include_in_detectors/>
          </detectors>
          <steady_state>
            <include_in_steady_state/>
          </steady_state>
        </diagnostic>
      </scalar_field>
    </ocean_boundaries>
  </geometry>
  <io>
    <dump_format>
      <string_value>vtk</string_value>
    </dump_format>
    <dump_period>
      <constant>
        <real_value rank="0">1.0</real_value>
      </constant>
    </dump_period>
    <output_mesh name="CoordinateMesh"/>
    <stat/>
  </io>
  <timestepping>
    <current_time>
      <real_value rank="0">0.0</real_value>
      <time_units date="seconds since 1997-01-14 17:00:00"/>
    </current_time>
    <timestep>
      <real_value rank="0">1.0</real_value>
    </timestep>
    <finish_time>
      <real_value rank="0">2.0</real_value>
    </finish_time>
  </timestepping>
  <physical_parameters>
    <gravity>
      <magnitude>
        <real_value rank="0">9.8</real_value>
      </magnitude>
      <vector_field name="GravityDirection" rank="1">
        <prescribed>
          <mesh name="CoordinateMesh"/>
          <value name="WholeMesh">
            <constant>
              <real_value shape="3" dim1="dim" rank="1">0.0 0.0 -1.0</real_value>
            </constant>
          </value>
          <output/>
          <stat>
            <include_in_stat/>
          </stat>
          <detectors>
            <exclude_from_detectors/>
          </detectors>
        </prescribed>
      </vector_field>
    </gravity>
  </physical_parameters>
  <material_phase name="Fluid">
    <scalar_field name="Density" rank="0">
      <diagnostic>
        <algorithm name="Internal" material_phase_support="multiple"/>
        <mesh name="VelocityMesh"/>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
    <vector_field name="Velocity" rank="1">
      <prognostic>
        <mesh name="VelocityMesh"/>
        <equation name="Boussinesq"/>
        <spatial_discretisation>
          <continuous_galerkin>
            <stabilisation>
              <streamline_upwind>
                <nu_bar_unity/>
                <nu_scale name="unity">
                  <real_value shape="1" rank="0">1.0</real_value>
                </nu_scale>
              </streamline_upwind>
            </stabilisation>
            <mass_terms>
              <lump_mass_matrix/>
            </mass_terms>
            <advection_terms>
              <exclude_advection_terms/>
            </advection_terms>
            <stress_terms>
              <tensor_form/>
            </stress_terms>
          </continuous_galerkin>
          <conservative_advection>
            <real_value rank="0">0.0</real_value>
          </conservative_advection>
        </spatial_discretisation>
        <temporal_discretisation>
          <theta>
            <real_value rank="0">1.0</real_value>
          </theta>
          <relaxation>
            <real_value rank="0">1.0</real_value>
          </relaxation>
        </temporal_discretisation>
        <solver>
          <iterative_method name="gmres">
            <restart>
              <integer_value rank="0">30</integer_value>
            </restart>
          </iterative_method>
          <preconditioner name="sor"/>
          <relative_error>
            <real_value rank="0">1.0E-5</real_value>
          </relative_error>
          <max_iterations>
            <integer_value rank="0">2000</integer_value>
          </max_iterations>
          <never_ignore_solver_failures/>
          <diagnostics>
            <monitors/>
          </diagnostics>
        </solver>
        <initial_condition name="WholeMesh">
          <constant>
            <real_value shape="3" dim1="dim" rank="1">0.0 0.0 0.0</real_value>
          </constant>
        </initial_condition>
        <boundary_conditions name="WindStress">
          <surface_ids>
            <integer_value shape="1" rank="1">111</integer_value>
          </surface_ids>
          <type name="bulk_formulae"/>
        </boundary_conditions>
        <output/>
        <stat>
          <include_in_stat/>
          <previous_time_step>
            <exclude_from_stat/>
          </previous_time_step>
          <nonlinear_field>
            <exclude_from_stat/>
          </nonlinear_field>
        </stat>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
        <consistent_interpolation/>
      </prognostic>
    </vector_field>
    <scalar_field name="Chlorophyll" rank="0">
      <prescribed>
        <mesh name="VelocityMesh"/>
        <value name="WholeMesh">
          <python>
            <string_value lines="20" type="python">import fluidity.lagrangian_biology as biology
from scipy import interpolate
global chl_profile
bbop_file = "bbop/chl19970114_1700.txt"
(depths, chl) = biology.read_chl_h42(bbop_file)
chl_profile = interpolate.interp1d(depths,chl,bounds_error=False,fill_value=chl[0])

def val(X, t):
  return chl_profile(-X[2])</string_value>
            <comment>Insert chlorophyll profile (from BBOP, 1997), interpolate linearly, fill d=0 with d=1 entry (assumes chl is defined until 100m).</comment>
          </python>
        </value>
        <output/>
        <stat/>
        <detectors>
          <exclude_from_detectors/>
        </detectors>
      </prescribed>
    </scalar_field>
    <scalar_field name="Temperature" rank="0">
      <prognostic>
        <mesh name="VelocityMesh"/>
        <equation name="AdvectionDiffusion"/>
        <spatial_discretisation>
          <continuous_galerkin>
            <stabilisation>
              <no_stabilisation/>
            </stabilisation>
            <advection_terms/>
            <mass_terms/>
          </continuous_galerkin>
          <conservative_advection>
            <real_value rank="0">0.0</real_value>
          </conservative_advection>
        </spatial_discretisation>
        <temporal_discretisation>
          <theta>
            <real_value rank="0">1.0</real_value>
          </theta>
        </temporal_discretisation>
        <solver>
          <iterative_method name="gmres">
            <restart>
              <integer_value rank="0">30</integer_value>
            </restart>
          </iterative_method>
          <preconditioner name="sor"/>
          <relative_error>
            <real_value rank="0">1.0e-7</real_value>
          </relative_error>
          <max_iterations>
            <integer_value rank="0">10000</integer_value>
          </max_iterations>
          <never_ignore_solver_failures/>
          <diagnostics>
            <monitors/>
          </diagnostics>
        </solver>
        <initial_condition name="WholeMesh">
          <constant>
            <real_value rank="0">20.7</real_value>
          </constant>
        </initial_condition>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
        <consistent_interpolation/>
      </prognostic>
    </scalar_field>
  </material_phase>
  <ocean_biology>
    <lagrangian_ensemble>
      <disable_biology/>
      <hyperlight>
        <scalar_field name="IrradianceTemplate" rank="0">
          <prescribed>
            <mesh name="VelocityMesh"/>
            <value name="WholeMesh">
              <constant>
                <real_value rank="0">0.0</real_value>
              </constant>
            </value>
            <output/>
            <stat/>
            <detectors>
              <exclude_from_detectors/>
            </detectors>
            <do_not_recalculate/>
          </prescribed>
        </scalar_field>
        <scalar_field name="IrradiancePAR" rank="0">
          <diagnostic>
            <mesh name="VelocityMesh"/>
            <algorithm name="scalar_python_diagnostic" material_phase_support="multiple">
              <string_value lines="20" type="python">planck = 6.626E-34;
speed = 2.998E8;
fnmtom = 1.0E-9;
fmoltoumol = 1.0E6;
avagadro = 6.023E23;
factor = fnmtom * fmoltoumol / (planck*speed*avagadro)

par_irrad = state.scalar_fields['IrradiancePAR']
for n in range(par_irrad.node_count):
  irrad_sum = 0.0
  for l in range(0, 36):
    wavelength = 350+l*10
    field_name = 'Irradiance_' + str(wavelength)
    spectral_irrad = state.scalar_fields[field_name]
    # irradiance(PAR) in mumol phot m-2s-1
    irrad_sum = irrad_sum + spectral_irrad.node_val(n) * 10.0 * wavelength * factor

  par_irrad.set(n, irrad_sum)</string_value>
              <comment>Total irradiance given in mumol phot m-2s-1, as in Hydrolight (H42).</comment>
            </algorithm>
            <output/>
            <stat/>
            <detectors>
              <include_in_detectors/>
            </detectors>
          </diagnostic>
        </scalar_field>
        <CDOM>
          <real_value rank="0">0.0</real_value>
        </CDOM>
        <BF_chl>
          <real_value rank="0">0.0185</real_value>
        </BF_chl>
        <CloudCover>
          <real_value rank="0">0.3</real_value>
        </CloudCover>
        <WindSpeed>
          <real_value rank="0">5.0</real_value>
        </WindSpeed>
      </hyperlight>
    </lagrangian_ensemble>
  </ocean_biology>
  <ocean_forcing>
    <bulk_formulae>
      <bulk_formulae>
        <type name="NCAR"/>
      </bulk_formulae>
      <input_file file_name="bermuda_90-99.nc"/>
      <position>
        <real_value shape="2" rank="1">31.6960 -64.1650</real_value>
        <single_location/>
      </position>
      <output_fluxes_diagnostics/>
    </bulk_formulae>
  </ocean_forcing>
</fluidity_options>
