<?xml version='1.0' encoding='utf-8'?>
<fluidity_options>
  <simulation_name>
    <string_value lines="1">hyperlight-bbop</string_value>
  </simulation_name>
  <problem_type>
    <string_value lines="1">oceans</string_value>
  </problem_type>
  <geometry>
    <dimension replaces="NDIM">
      <integer_value rank="0">3</integer_value>
    </dimension>
    <mesh name="CoordinateMesh">
      <from_file file_name="hyperlight-bbop">
        <format name="triangle"/>
        <stat>
          <include_in_stat/>
        </stat>
      </from_file>
    </mesh>
    <mesh name="VelocityMesh">
      <from_mesh>
        <mesh name="CoordinateMesh"/>
        <stat>
          <exclude_from_stat/>
        </stat>
      </from_mesh>
    </mesh>
    <quadrature>
      <degree replaces="NGI">
        <integer_value rank="0">3</integer_value>
      </degree>
    </quadrature>
  </geometry>
  <io>
    <dump_format>
      <string_value>vtk</string_value>
    </dump_format>
    <dump_period>
      <constant replaces="TIMDUM">
        <real_value rank="0">1.0</real_value>
      </constant>
    </dump_period>
    <output_mesh name="CoordinateMesh"/>
    <stat/>
  </io>
  <timestepping>
    <current_time replaces="ACCTIM">
      <real_value rank="0">0.0</real_value>
    </current_time>
    <timestep replaces="DT">
      <real_value rank="0">1.0</real_value>
    </timestep>
    <finish_time replaces="LTIME">
      <real_value rank="0">1.0</real_value>
    </finish_time>
  </timestepping>
  <material_phase name="Fluid">
    <vector_field name="Velocity" rank="1">
      <prognostic>
        <mesh name="VelocityMesh"/>
        <equation name="Boussinesq"/>
        <spatial_discretisation>
          <continuous_galerkin>
            <stabilisation>
              <streamline_upwind>
                <nu_bar_unity/>
                <nu_scale name="unity">
                  <real_value shape="1" rank="0">1.0</real_value>
                </nu_scale>
              </streamline_upwind>
            </stabilisation>
            <mass_terms>
              <lump_mass_matrix/>
            </mass_terms>
            <advection_terms>
              <exclude_advection_terms/>
            </advection_terms>
            <stress_terms>
              <tensor_form/>
            </stress_terms>
          </continuous_galerkin>
          <conservative_advection replaces="BETA">
            <real_value rank="0">0.0</real_value>
          </conservative_advection>
        </spatial_discretisation>
        <temporal_discretisation>
          <theta replaces="THETA">
            <real_value rank="0">1.0</real_value>
          </theta>
          <relaxation replaces="ITHETA">
            <real_value rank="0">1.0</real_value>
          </relaxation>
        </temporal_discretisation>
        <solver>
          <iterative_method name="gmres">
            <restart>
              <integer_value rank="0">30</integer_value>
            </restart>
          </iterative_method>
          <preconditioner name="sor"/>
          <relative_error>
            <real_value rank="0">1.0E-5</real_value>
          </relative_error>
          <max_iterations>
            <integer_value rank="0">2000</integer_value>
          </max_iterations>
          <never_ignore_solver_failures/>
          <diagnostics>
            <monitors/>
          </diagnostics>
        </solver>
        <initial_condition name="WholeMesh">
          <constant>
            <real_value shape="3" dim1="dim" rank="1">0.0 0.0 0.0</real_value>
          </constant>
        </initial_condition>
        <output/>
        <stat>
          <include_in_stat/>
          <previous_time_step>
            <exclude_from_stat/>
          </previous_time_step>
          <nonlinear_field>
            <exclude_from_stat/>
          </nonlinear_field>
        </stat>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
        <consistent_interpolation/>
      </prognostic>
    </vector_field>
    <scalar_field name="Chlorophyll" rank="0">
      <prescribed>
        <mesh name="VelocityMesh"/>
        <value name="WholeMesh">
          <python>
            <string_value lines="20" type="python">import fluidity.lagrangian_biology as biology
from scipy import interpolate
global chl_profile
bbop_files = { 0.0:{0.0:"bbop/chl19970114_1700.txt",
                    100.0:"bbop/chl19970128_1700.txt"},
               100.0:{0.0:"bbop/chl19970207_1714.txt",
                    100.0:"bbop/chl19970221_1615.txt"},
}

chl_profile = {}
for x in bbop_files.keys():
  chl_profile[x] = {}
  for y in bbop_files[x].keys():
    (depths, chl) = biology.read_chl_h42(bbop_files[x][y])
    chl_profile[x][y] = interpolate.interp1d(depths,chl,bounds_error=False,fill_value=chl[0])

def val(X, t):
  return chl_profile[X[0]][X[1]](-X[2])</string_value>
            <comment>Insert 4 chlorophyll profiles from BBOP (1997) on the 4 edges of the mesh, interpolate linearly, fill d=0 with d=1 entry (assumes chl is defined until 100m).</comment>
          </python>
        </value>
        <output/>
        <stat/>
        <detectors>
          <exclude_from_detectors/>
        </detectors>
      </prescribed>
    </scalar_field>
  </material_phase>
  <ocean_biology>
    <lagrangian_ensemble>
      <biology_algorithm>
        <string_value lines="20" type="python">import fluidity.lagrangian_biology as biology

biology.derive_PAR_irradiance(state)</string_value>
      </biology_algorithm>
      <hyperlight>
        <scalar_field name="IrradianceTemplate" rank="0">
          <prescribed>
            <mesh name="VelocityMesh"/>
            <value name="WholeMesh">
              <constant>
                <real_value rank="0">0.0</real_value>
              </constant>
            </value>
            <output/>
            <stat/>
            <detectors>
              <exclude_from_detectors/>
            </detectors>
            <do_not_recalculate/>
          </prescribed>
        </scalar_field>
        <scalar_field name="IrradiancePAR" rank="0">
          <prescribed>
            <mesh name="VelocityMesh"/>
            <value name="WholeMesh">
              <constant>
                <real_value rank="0">0.0</real_value>
              </constant>
            </value>
            <output/>
            <stat/>
            <detectors>
              <exclude_from_detectors/>
            </detectors>
            <do_not_recalculate/>
          </prescribed>
        </scalar_field>
        <cdom>
          <real_value rank="0">0.0</real_value>
        </cdom>
        <bf_chl>
          <real_value rank="0">0.0185</real_value>
        </bf_chl>
      </hyperlight>
    </lagrangian_ensemble>
  </ocean_biology>
</fluidity_options>
