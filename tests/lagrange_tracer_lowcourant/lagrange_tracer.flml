<?xml version='1.0' encoding='utf-8'?>
<fluidity_options>
  <simulation_name>
    <string_value lines="1">lagrange_tracer</string_value>
  </simulation_name>
  <problem_type>
    <string_value lines="1">fluids</string_value>
  </problem_type>
  <geometry>
    <dimension replaces="NDIM">
      <integer_value rank="0">2</integer_value>
    </dimension>
    <mesh name="CoordinateMesh">
      <from_file file_name="2element_square">
        <format name="triangle"/>
        <stat>
          <exclude_from_stat/>
        </stat>
      </from_file>
    </mesh>
    <mesh name="VelocityMesh">
      <from_mesh>
        <mesh name="CoordinateMesh"/>
        <mesh_shape>
          <polynomial_degree>
            <integer_value rank="0">0</integer_value>
          </polynomial_degree>
        </mesh_shape>
        <mesh_continuity>
          <string_value>discontinuous</string_value>
        </mesh_continuity>
        <stat>
          <include_in_stat/>
        </stat>
      </from_mesh>
    </mesh>
    <mesh name="PressureMesh">
      <from_mesh>
        <mesh name="CoordinateMesh"/>
        <stat>
          <include_in_stat/>
        </stat>
      </from_mesh>
    </mesh>
    <quadrature>
      <degree replaces="NGI">
        <integer_value rank="0">4</integer_value>
      </degree>
    </quadrature>
  </geometry>
  <io>
    <dump_format>
      <string_value>vtk</string_value>
    </dump_format>
    <dump_period_in_timesteps>
      <integer_value rank="0">1</integer_value>
    </dump_period_in_timesteps>
    <output_mesh name="CoordinateMesh"/>
    <stat>
      <output_at_start/>
    </stat>
    <detectors>
      <detector_array name="DummyArray">
        <number_of_detectors>
          <integer_value rank="0">1</integer_value>
        </number_of_detectors>
        <lagrangian/>
        <python>
          <string_value lines="20" type="python">def val(t):
   coords = [[2./3., 1./3.]]
   return coords</string_value>
        </python>
      </detector_array>
    </detectors>
  </io>
  <timestepping>
    <current_time replaces="ACCTIM">
      <real_value rank="0">0.0</real_value>
    </current_time>
    <timestep replaces="DT">
      <real_value rank="0">0.1</real_value>
    </timestep>
    <finish_time replaces="LTIME">
      <real_value rank="0">10.0</real_value>
    </finish_time>
    <final_timestep>
      <integer_value rank="0">1</integer_value>
    </final_timestep>
  </timestepping>
  <physical_parameters/>
  <material_phase name="Dummy">
    <vector_field name="Velocity" rank="1">
      <prescribed>
        <mesh name="VelocityMesh"/>
        <value name="WholeMesh">
          <python>
            <string_value lines="20" type="python">def val(X,t):
   from math import sqrt
   return (-1./3., 1./3.)</string_value>
          </python>
        </value>
        <output/>
        <stat>
          <include_in_stat/>
        </stat>
        <detectors>
          <exclude_from_detectors/>
        </detectors>
      </prescribed>
    </vector_field>
    <scalar_field name="Field" rank="0">
      <prescribed>
        <mesh name="VelocityMesh"/>
        <value name="WholeMesh">
          <python>
            <string_value lines="20" type="python">def val(X,t):
   if(X[1]&lt;0.5):
      return 1.0
   else:
      return 2.0</string_value>
          </python>
        </value>
        <output/>
        <stat/>
        <detectors>
          <include_in_detectors/>
        </detectors>
      </prescribed>
    </scalar_field>
  </material_phase>
</fluidity_options>
