#!/usr/bin/env python

"""
Script to switch an flml file from BalancePressure to GeostrophicPressure
"""

import sys

import libspud

def FatalError(msg):
  sys.stderr.write(msg + "\n")
  sys.stderr.flush()
  sys.exit(-1)

for filename in sys.argv[1:]:
  print "Processing: " + filename

  libspud.load_options(filename)
  if libspud.have_option("/geometry::GeostrophicPressureMesh"):
    FatalError("Cannot update options file - already has a GeostrophicPressureMesh")

  meshPath = "/geometry/mesh::GeostrophicPressureMesh"
  try:
    libspud.set_option_attribute(meshPath + "/from_mesh/mesh/name", libspud.get_option("/geometry/mesh::VelocityMesh/from_mesh/mesh/name"))
  except libspud.SpudNewKeyWarning:
    pass
  try:
    libspud.set_option(meshPath + "/from_mesh/mesh_shape/polynomial_degree", 2)
  except libspud.SpudNewKeyWarning:
    pass
  try:
    libspud.add_option(meshPath + "/from_mesh/stat/exclude_from_stat")
  except libspud.SpudNewKeyWarning:
    pass

  for i in range(libspud.option_count("/material_phase")):
    matPath = "/material_phase[" + str(i) + "]"
    if libspud.have_option(matPath + "/scalar_field::BalancePressure"):
      fieldPath = matPath + "/scalar_field::BalancePressure"
      cFieldPath = fieldPath + "/prognostic"
      
      libspud.set_option_attribute(fieldPath + "/name", "GeostrophicPressure")
      libspud.delete_option(cFieldPath + "/exclude_from_checkpointing")
      try:
        libspud.set_option(cFieldPath + "/reference_node", 1)
      except libspud.SpudNewKeyWarning:
        pass
      try:
        libspud.set_option_attribute(cFieldPath + "/reference_node/name", "node_1")
      except libspud.SpudNewKeyWarning:
        pass
      libspud.set_option_attribute(cFieldPath + "/mesh/name", "GeostrophicPressureMesh")

  libspud.write_options(filename)
  libspud.clear_options()
