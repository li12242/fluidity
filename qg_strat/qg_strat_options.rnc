include "spud_base.rnc"
include "../tools/solvers.rnc"
include "../tools/adaptivity_options.rnc"
include "../tools/mesh_options.rnc"
include "../tools/input_output.rnc"
include "../tools/prognostic_field_options.rnc"
include "../tools/prescribed_field_options.rnc"

start =
   (
      ## The root node of the options dictionary.
      element qg_strat_options {
         comment,
         ## Model output files are named according to the simulation name, e.g. [simulation_name]_0.vtu. Non-standard characters in the simulation name should be avoided.
         element simulation_name {
            anystring
         },
         ## Options dealing with the specification of geometry
         element geometry {
            ## Dimension of the problem.
            ## <b>This can only be set once</b>
            element dimension {
               element integer_value {
                  attribute rank {"0"},
                  ("3")
               }
            },
            ## The position mesh
            element mesh {
               attribute name { "CoordinateMesh" },
               mesh_info
            },
            element mesh {
               attribute name { "PotentialVorticityMesh" },
               mesh_info
            }?,
            element mesh {
               attribute name { "StreamfunctionMesh" },
               mesh_info
            }?,
            ## Quadrature
            element quadrature {
               ## Quadrature degree
               ## note: this specifies the degree of quadrature not the number of gauss points
               element degree {
                  integer
               }
            }
         },
         ## Input/output options
         element io {
            ## Period between dumps in time units.
            ## Specifies the period between each dump of the solution to disk.
            ## A value of 0.0 indicates that there would be a dump at every timestep.
            element dump_period {
               real
            }
         },
         ## Options dealing with time discretisation
         element timestepping {
            ## Current simulation time. At the start of the simulation this
            ## is the start time.
            element current_time {
               real
            },
            ## The time step size. If adaptive time stepping is used
            ## then this is the initial time step size.
            element timestep {
               real
            },
            ## Simulation time at which the simulation should end.
            element finish_time {
               real
            },
            ## Settings for Runge-Kutta timestepping
            element rungekutta {
               element stages {
                  real_vector
               },
               element weights {
                  real_vector
               }
            }
         },
         ## The physical parameters
         element physical_parameters {
            ## Set buoyancy frequency N where N^2=-(g/rho)(d rho/dz)
            element buoyancy_frequency {
               real
            },
            element coriolis {
               (
                  ## f-plane approximation
                  ## f / 2 = f_0
                  element f_plane {
                     ## f / 2 = f_0
                     element f_0 {
                        real
                     }
                  }|
                  ## Beta-plane approximation
                  ## f / 2 = f_0 + beta_vector . x
                  element beta_plane {
                     ## f_0, where:
                     ##
                     ## f / 2 = f_0 + beta_vector . x
                     element f_0 {
                        real
                     },
                     ## beta_vector, where:
                     ## f / 2 = f_0 + beta_vector . x
                     ## Note that this is not necessarily a unit vector (unlike GravityDirection).
                     element beta_vector {
                        real_dim_vector
                     }
                  }
               )
            }
         },
         element material_phase {
            attribute name { xsd:string },
            element scalar_field {
               attribute rank { "0" },
               attribute name { "PotentialVorticity" },
               ## Field type
               element prognostic {
                  mesh_choice,
                  prognostic_scalar_field
               }
            },
            element scalar_field {
               attribute rank { "0" },
               attribute name { "Streamfunction" },
               ## Field type
               (
                  element prognostic {
                     mesh_choice,
                     prognostic_streamfunction_field
                  }|
                  element prescribed {
                     mesh_choice,
                     prescribed_scalar_field
                  }
               )
            }
         },
         mesh_adaptivity_options?
      }
   )

prescribed_scalar_field =
   (
     prescribed_scalar_field_no_adapt,
     adaptivity_options_scalar_field
   )

prescribed_scalar_field_no_adapt = prescribed_values_scalar_field


prognostic_PV_field =
   (
      element equation { 
         attribute name { "AdvectionDiffusion" }
      },
      spatial_discretisation_options,
      temporal_discretisation_options,
      ## Initial condition for WholeMesh
      element initial_condition {
         attribute name { "WholeMesh" },
         input_choice_initial_condition_real
      },
      ## Solver
      element solver {
         linear_solver_options_asym
      },
      ## Diffusivity for field
      element tensor_field {
         attribute name { "Diffusivity" },
         attribute rank { "2" },
         element prescribed {
            prescribed_values_tensor_field
         }
      }?,
      ## source term
      element scalar_field {
         attribute name { "Source" },
         attribute rank { "0" },
         (
            element prescribed {
               prescribed_scalar_field_no_adapt
            }
         )
      }?,
      ## Absorption term
      element scalar_field {
         attribute name { "Absorption" },
         attribute rank { "0" },
         element prescribed {
            prescribed_scalar_field_no_adapt
         }
      }?,
      adaptivity_options_scalar_field
   )

prognostic_buoyancy_field =
   (
      element equation { 
         attribute name { "AdvectionDiffusion" }
      },
      spatial_discretisation_options,
      temporal_discretisation_options,
      ## Initial condition for WholeMesh
      element initial_condition {
         attribute name { "WholeMesh" },
         input_choice_initial_condition_real
      },
      ## Solver
      element solver {
         linear_solver_options_asym
      },
      ## Diffusivity for field
      element tensor_field {
         attribute name { "Diffusivity" },
         attribute rank { "2" },
         element prescribed {
            prescribed_values_dim_minus_one_tensor_field
         }
      }?
   )

prognostic_streamfunction_field =
   (
      ## Solver
      element solver {
         linear_solver_options_sym
      },
      ## Boundary conditions
      ## You must specify the surface ids for the side boundaries where we set the streamfunction to zero.
      ## For the top and bottom boundaries, we solve an advection-diffusion equation for the buoyancy.
      element boundary_conditions {
         attribute name { string },
         ## Surface id:
         element surface_ids {
            integer_vector
         },
         (
            element type {
               attribute name { "dirichlet" },
               element constant {
                  real
               }
            }|
            element type {
               attribute name { "buoyancy" },
               element scalar_field {
                  element prognostic {
                     prognostic_buoyancy_field
                  }
               }
            }
         )
      }*
   )

mesh_choice =
   # Most common mesh choices
   (
      element mesh {
         attribute name { "CoordinateMesh" }
      }|
      element mesh {
         attribute name { "PotentialVorticityMesh" }
      }|
      element mesh {
         attribute name { "StreamfunctionMesh" }
      }
   )

