<?xml version='1.0' encoding='utf-8'?>
<testproblem>
    <name>backward facing step 2D example</name>
    <!--Runs a 2D backward facing step problem with geometry defined as in Armaly et al, 1983. Experimental and theoretical investigation of backward-facing step flow, Journal of Fluid Mechanics.-->
  <owner userid="jbull"/>
  <tags>flml 2dadapt</tags>
  <!-- - uses flml- uses 2d adaptivity -->
  <problem_definition length="long" nprocs="1">
    <command_line>mpiexec fluidity -v2 -l backward_facing_step_2d.flml</command_line>
  </problem_definition>
  <variables>
    <variable name="finishtime" language="python">from fluidity_tools import stat_parser as stat
finishtime= stat("backward_facing_step_2d.stat")["ElapsedTime"]["value"][-1]</variable>
    <variable name="reattachment_length" language="python">
from postprocessor_2d import reatt_length, get_filelist
import numpy
exclude_initial_results = 130
filelist = get_filelist()
reattachment_length = numpy.array(reatt_length(filelist, exclude_initial_results))
    </variable>
  </variables>
  <pass_tests>
    <test name="finish_time" language="python">assert finishtime &gt; 40.0</test>
    <test name="Reattachment length does not change by more than 10%" language="python">
print ( ( max(reattachment_length[:,0]) - min(reattachment_length[:,0]) ) / min(reattachment_length[:,0]) )
assert( ( max(reattachment_length[:,0]) - min(reattachment_length[:,0]) ) / min(reattachment_length[:,0]) &lt; 0.1)
    </test>
  </pass_tests>
  <warn_tests/>
</testproblem>
